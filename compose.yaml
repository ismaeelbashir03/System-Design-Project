services:
  web:
    container_name: web
    build: web
    restart: always
    environment:
      - ORIGIN=http://web:${WEB_PORT}
      - DATABASE_HOST=database
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_PORT=${DATABASE_PORT}
    ports:
      - ${WEB_PORT}:3000
    depends_on:
      - database
    command: sh -c "npx tsx migrate.ts && node build"

  # ros:
  #   container_name: ros
  #   build: ROS
  #   restart: always
  #   networks:
  #     ROSNetwork:
  #       ipv4_address: 192.168.212.22
  #   environment:
  #     - WEBSOCKET_SERVER_URL=ws://192.168.212.118:8080
  #     - ROS_MASTER_URI=http://192.168.212.61:11311
  #     - ROS_IP=192.168.212.22

  websocket:
    container_name: websocket
    build: websocket
    restart: always
    environment:
      - WEBSOCKET_PORT=8080
    ports:
      - 8080:8080

  database:
    container_name: database
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    ports:
      - ${DATABASE_PORT}:5432
    volumes:
      - db-data:/var/lib/postgresql/data

volumes:
  db-data:

# networks:
#   ROSNetwork:
#     driver: ipvlan
#     driver_opts:
#       parent: enp0s6
#     ipam:
#       config:
#         - subnet: 192.168.212.0/24
#           gateway: 192.168.212.63
